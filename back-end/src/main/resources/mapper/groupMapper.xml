<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.help.back.backend.dao.GroupDao">
    <!-- group crud   -->
    <insert id="postGroup" parameterType="group" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO
        groups(name) Values(#{name})
    </insert>

    <delete id="deleteGroup" parameterType="int">
        DELETE FROM groups WHERE id = #{value}
    </delete>

    <update id="updateGroup" parameterType="group">
        UPDATE groups SET name = #{name}
        WHERE id = #{id}
    </update>

    <select id="getGroup" parameterType="int" resultType="group">
        SELECT id, name FROM groups WHERE id = #{value}
    </select>

    <select id="getGroupHavingUser" parameterType="int" resultMap="groupHavingUser">
        SELECT g.id, g.name, ug.ug_id, ug.user_id, ug.group_id, ug.is_host
        FROM groups g LEFT OUTER JOIN user_group ug
        ON g.id = ug.group_id
        WHERE g.id = #{value}
    </select>


    <!-- groupuser crud   -->
    <insert id="postGroupUser" parameterType="groupUser" useGeneratedKeys="true" keyProperty="ugId" >
        INSERT INTO
        user_group(user_id, group_id, is_host) Values(#{userId}, #{groupId}, #{isHost})
    </insert>

    <delete id="deleteGroupUser" parameterType="hashMap">
        DELETE FROM user_group WHERE user_id = #{user-id} AND group_id = #{group-id}
    </delete>

    <update id="updateGroupUser" parameterType="groupUser">
        UPDATE user_group SET is_host = #{isHost} WHERE ug_id = #{ugId}
    </update>

    <select id="getGroupUser" parameterType="int" resultMap="groupdata">
        SELECT ug.ug_id, ug.user_id, ug.group_id, ug.is_host, u.id, u.email, u.name, u.birthday, u.phone_number
        FROM user_group ug LEFT OUTER JOIN users u
        ON ug.user_id = u.id
        WHERE group_id = #{value}
    </select>



    <select id="getGroupUserByUserid" parameterType="int" resultType="groupUser">
        SELECT ug_id, user_id, group_id, is_host
        FROM user_group
        WHERE user_id = #{value}
    </select>


    <!-- resultmap   -->
    <resultMap type="group" id="groupHavingUser">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <collection property="groupUser" resultMap="groupUser"/>
    </resultMap>

    <resultMap type="groupUser" id="groupdata">
        <id column="ug_id" property="ugId" />
        <result column="user_id" property="userId" />
        <result column="group_id" property="groupId" />
        <result column="is_host" property="isHost" />
        <collection property="user" resultMap="user"/>
    </resultMap>

    <resultMap type="groupUser" id="groupUser">
        <id column="ug_id" property="ugId" />
        <result column="user_id" property="userId" />
        <result column="group_id" property="groupId" />
        <result column="is_host" property="isHost" />
    </resultMap>

    <resultMap type="user" id="user">
        <id column="id" property="id" />
        <result column="password" property="password" />
        <result column="email" property="email" />
        <result column="name" property="name" />
        <result column="birthday" property="birthday" />
        <result column="phone_number" property="phoneNumber" />
    </resultMap>

</mapper>